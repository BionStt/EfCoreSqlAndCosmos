@using EfCoreInAction.Services
@model bool
@inject AppInformation AppInformation
@{
    ViewData["Title"] = "About";
}

<h3>About EfCoreInAction </h3>

<table class="table">
    <tr>
        <td>
            <h2>
                <a href="https://www.manning.com/books/entity-framework-core-in-action?a_aid=su4utaraxuTre8tuthup&a_bid=4cef27ce">Entity Framework Core in Action</a>
            </h2>
            <p>
                Welcome to the <i>Live</i> example book selling site that is used to show some of the code
                from the book <a href="https://www.manning.com/books/entity-framework-core-in-action?a_aid=su4utaraxuTre8tuthup&a_bid=4cef27ce">Entity Framework Core in Action</a>
                working on a hosted site. Please visit the
                <a href="https://www.manning.com/books/entity-framework-core-in-action?a_aid=su4utaraxuTre8tuthup&a_bid=4cef27ce">Manning Publications site</a>
                to find out more about the book and its content.
            </p>
            <h3>What am I seeing?</h3>
            <p>
                This site is currently running a two-database CQRS (Command Query Responsibility Segregation) architecture 
                application using a polyglot database structure. This means:
            </p>
            <ol>
                <li>
                    <strong>CQRS: </strong>This architecture splits reads from writes into two different parts.
                    This is done to allow the reads to be performance tuned by saving the exact data that is to be shown
                    to the user, thus saving calculations being done at read-time.
                </li>
                <li><strong>Polyglot database structure: </strong>This means I use different types of databases for the read and write sides of
                    the CQRS system. I use the two types of databases:
                    <ul>
                        <li>A NoSQL database, <a href="https://ravendb.net/">RavenDb</a>, for my read-side database. Kindly hosted by <a href="https://mgmt.ravenhq.com">RavenHQ</a>.</li>
                        <li>A SQL Server database hosted on my web host provider, <a href="http://bit.ly/2yIze6q">Web Wizz</a>.</li>
                    </ul>
                </li>

            </ol>
            <h4 class="text-primary"><strong>
                See the article <a class="h3" href="http://www.thereformedprogrammer.net/ef-core-combining-sql-and-nosql-databases-for-better-performance/">
                    "EF Core – Combining SQL and NoSQL databases for better performance"
                </a> for a full write-up!
            </strong></h4>
            <p>
                The database contains 250,000 books, plus other entities as shown in the table below.
                This is test data I use for performance testing, and I build data using 300 real books from Manning's site
                and replicating it multiple times.
            </p>
            <table class="table">
                <tbody>
                    <tr>
                        <th>Books</th>
                        <th>Reviews</th>
                        <th>BookAuthor</th>
                        <th>Authors</th>
                    </tr>
                    <tr>
                        <td>The books!</td>
                        <td>Holds reviews of the books</td>
                        <td>Many-to-Many linking table</td>
                        <td>Authors</td>
                    </tr>
                    <tr>
                        <td>250,000</td>
                        <td>1,374,985</td>
                        <td>470,517</td>
                        <td>580</td>
                    </tr>
                </tbody>
            </table>

            <p>
                You can't change the data, for obvious reasons, but you can 'buy' a book or two -
                no money needed, but then again we don't send you the books either :)
                <br />
                <span class="text-muted">Note: the checkout will use a cookie to hold your order.</span>
            </p>


            <p>
                You can download and run the application locally, which allows you to change the data, if you clone the github repo
                (see <a href="https://www.manning.com/books/entity-framework-core-in-action?a_aid=su4utaraxuTre8tuthup&a_bid=4cef27ce">the book</a>)
                which goes with the book.
            </p>
            <h4>Jon P Smith</h4>
            <p>Author of the <strong>Entity Framework Core in Action</strong> book.</p>
            <a href="http://www.thereformedprogrammer.net/">My blog site</a>, where you will find articles on Entity Framework, ASP.NET, React.js and much more.
        </td>
        <td>
            <a href="https://www.manning.com/books/entity-framework-core-in-action?a_aid=su4utaraxuTre8tuthup&a_bid=4cef27ce">
                <img src="~/images/entity-framework-core-in-action.png"
                     alt="Entity Framework Core in Action"/>
            </a>
        </td>
    </tr>
</table>

<hr/>

<p>
    This application was built from git branch: <strong>@AppInformation.GitBranchName</strong>
</p>
@if (@Model)
{
    <p>Updates are ENABLED because the application is running locally.</p>
}
else
{
    <p>Updates are DISABLED because the application is running hosted.</p>
}
<h3>Versions this application uses</h3>
<table class="table-condensed">
    <tr>
        <th>Assembly</th>
        <th>Version</th>
    </tr>
    @foreach (var tuple in @AppInformation.GetAssembliesInfo())
    {
        <tr>
            <td>@tuple.Item1</td>
            <td>@tuple.Item2</td>
        </tr>
    }
</table>



